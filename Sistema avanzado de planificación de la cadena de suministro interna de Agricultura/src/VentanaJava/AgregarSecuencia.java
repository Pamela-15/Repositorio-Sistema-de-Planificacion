/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VentanaJava;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author lopez.p.2
 */
public class AgregarSecuencia extends javax.swing.JFrame {

    /**
     * Creates new form AgregarSecuencia
     */
    public AgregarSecuencia() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        FechaInicial = new com.toedter.calendar.JDateChooser();
        FechaFinal = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        Secuencia3 = new javax.swing.JLabel();
        Horas1 = new javax.swing.JTextField();
        Rango7 = new javax.swing.JComboBox<>();
        Rango3 = new javax.swing.JComboBox<>();
        Rango5 = new javax.swing.JComboBox<>();
        Rango8 = new javax.swing.JComboBox<>();
        Secuencia6 = new javax.swing.JLabel();
        Secuencia4 = new javax.swing.JLabel();
        Rango4 = new javax.swing.JComboBox<>();
        Rango6 = new javax.swing.JComboBox<>();
        Secuencia5 = new javax.swing.JLabel();
        Rango1 = new javax.swing.JComboBox<>();
        Secuencia2 = new javax.swing.JLabel();
        Horas4 = new javax.swing.JTextField();
        Horas2 = new javax.swing.JTextField();
        Secuencia1 = new javax.swing.JLabel();
        Horas3 = new javax.swing.JTextField();
        Horas5 = new javax.swing.JTextField();
        Horas6 = new javax.swing.JTextField();
        Horas7 = new javax.swing.JTextField();
        Horas8 = new javax.swing.JTextField();
        Rango2 = new javax.swing.JComboBox<>();
        Secuencia7 = new javax.swing.JLabel();
        Secuencia8 = new javax.swing.JLabel();
        Horas13 = new javax.swing.JTextField();
        Secuencia12 = new javax.swing.JLabel();
        Horas14 = new javax.swing.JTextField();
        Rango12 = new javax.swing.JComboBox<>();
        Horas15 = new javax.swing.JTextField();
        Rango14 = new javax.swing.JComboBox<>();
        Horas16 = new javax.swing.JTextField();
        Secuencia13 = new javax.swing.JLabel();
        Rango10 = new javax.swing.JComboBox<>();
        Secuencia11 = new javax.swing.JLabel();
        Rango9 = new javax.swing.JComboBox<>();
        Secuencia15 = new javax.swing.JLabel();
        Horas9 = new javax.swing.JTextField();
        Secuencia10 = new javax.swing.JLabel();
        Secuencia16 = new javax.swing.JLabel();
        Rango15 = new javax.swing.JComboBox<>();
        Horas12 = new javax.swing.JTextField();
        Rango11 = new javax.swing.JComboBox<>();
        Horas10 = new javax.swing.JTextField();
        Rango13 = new javax.swing.JComboBox<>();
        Secuencia9 = new javax.swing.JLabel();
        Rango16 = new javax.swing.JComboBox<>();
        Horas11 = new javax.swing.JTextField();
        Secuencia14 = new javax.swing.JLabel();
        Guardar = new javax.swing.JButton();
        Cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setFont(new java.awt.Font("Cambria", 0, 22)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Registrar Secuencia de Transporte");

        jLabel1.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jLabel1.setText("Fecha Inicial");

        jLabel2.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jLabel2.setText("Fecha Final");

        jLabel6.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Rango de Peso");

        jLabel3.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Secuencia No.");

        jLabel7.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Horas de Procesamiento");

        jPanel1.setPreferredSize(new java.awt.Dimension(599, 833));

        Secuencia3.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia3.setText("3");

        Rango7.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));

        Rango3.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));

        Rango5.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));

        Rango8.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));

        Secuencia6.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia6.setText("6");

        Secuencia4.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia4.setText("4");

        Rango4.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));

        Rango6.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));

        Secuencia5.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia5.setText("5");

        Rango1.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));
        Rango1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rango1ActionPerformed(evt);
            }
        });

        Secuencia2.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia2.setText("2");

        Secuencia1.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia1.setText("1");

        Rango2.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));

        Secuencia7.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia7.setText("7");

        Secuencia8.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia8.setText("8");

        Secuencia12.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia12.setText("12");

        Rango12.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango12.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));

        Rango14.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango14.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));

        Secuencia13.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia13.setText("13");

        Rango10.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));

        Secuencia11.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia11.setText("11");

        Rango9.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));
        Rango9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rango9ActionPerformed(evt);
            }
        });

        Secuencia15.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia15.setText("15");

        Secuencia10.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia10.setText("10");

        Secuencia16.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia16.setText("16");

        Rango15.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango15.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));

        Rango11.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango11.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));

        Rango13.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango13.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));

        Secuencia9.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia9.setText("9");

        Rango16.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Rango16.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequeño", "Mediano", "Grande" }));

        Secuencia14.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        Secuencia14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Secuencia14.setText("14");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Secuencia14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Secuencia13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Secuencia9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Secuencia10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Secuencia11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Secuencia12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Secuencia15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Secuencia16, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Rango12, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rango11, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rango10, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rango9, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rango13, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rango14, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rango15, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rango16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Horas15, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Horas14, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Horas13, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Horas12, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Horas11, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Horas10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Horas9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Horas16, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Secuencia6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Secuencia5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Secuencia1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Secuencia2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Secuencia3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Secuencia4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Secuencia7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Secuencia8, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Rango4, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rango3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rango2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rango1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rango5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rango6, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rango7, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Rango8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Horas7, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Horas6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Horas5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Horas4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Horas3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Horas2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Horas1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Horas8, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 130, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia1)
                    .addComponent(Horas1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia2)
                    .addComponent(Horas2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia3)
                    .addComponent(Horas3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia4)
                    .addComponent(Horas4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia5)
                    .addComponent(Horas5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia6)
                    .addComponent(Horas6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia7)
                    .addComponent(Horas7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia8)
                    .addComponent(Horas8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia9)
                    .addComponent(Horas9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia10)
                    .addComponent(Horas10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia11)
                    .addComponent(Horas11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia12)
                    .addComponent(Horas12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia13)
                    .addComponent(Horas13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia14)
                    .addComponent(Horas14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia15)
                    .addComponent(Horas15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rango16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Secuencia16)
                    .addComponent(Horas16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jScrollPane2.setViewportView(jPanel1);

        Guardar.setFont(new java.awt.Font("Calibri Light", 0, 22)); // NOI18N
        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        Cancelar.setFont(new java.awt.Font("Calibri Light", 0, 22)); // NOI18N
        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42))
            .addGroup(layout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(Guardar)
                .addGap(58, 58, 58)
                .addComponent(Cancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(FechaInicial, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)))
                    .addComponent(FechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Cancelar)
                    .addComponent(Guardar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Rango1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rango1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Rango1ActionPerformed

    private void Rango9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rango9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Rango9ActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        int idSecuencia = 0;
        String driver = "com.mysql.jdbc.Driver";
        String connection = "jdbc:mysql://localhost:3306/cargill";
        String user = "root";
        String password = "admi";
        try {
            Class.forName(driver);
            Connection con = DriverManager.getConnection(connection, user, password);

            if (!con.isClosed()&& FechaInicial.getDate() != null && FechaFinal.getDate()!= null&& Horas1.getText() != null && Horas2.getText()!= null && Horas3.getText()!= null) {

                PreparedStatement cantidadsecuencias = con.prepareStatement("select * from cargill.`secuencia de transporte real` ");
                ResultSet resultadocantidadsecuencias = cantidadsecuencias.executeQuery();
                while( resultadocantidadsecuencias.next() ) {
                    idSecuencia = Integer.parseInt(resultadocantidadsecuencias.getString("idSecuencia"));
                }

                resultadocantidadsecuencias.close();
                cantidadsecuencias.close();

                java.util.Date javaFechaInicial = FechaInicial.getDate();
                java.sql.Date sqlFechaInicial = new java.sql.Date(javaFechaInicial.getTime());
                java.util.Date javaFechaFinal = FechaInicial.getDate();
                java.sql.Date sqlFechaFinal = new java.sql.Date(javaFechaFinal.getTime());

                PreparedStatement RegistrarSecuencia1 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia1.setInt(1, idSecuencia + 1);
                RegistrarSecuencia1.setDate(2, sqlFechaInicial);
                RegistrarSecuencia1.setDate(3, sqlFechaFinal);
                RegistrarSecuencia1.setString(4, Secuencia1.getText());
                RegistrarSecuencia1.setString(5, (String) Rango1.getSelectedItem());
                RegistrarSecuencia1.setInt(6, Integer.parseInt(Horas1.getText()));
                int x1 = RegistrarSecuencia1.executeUpdate();
                RegistrarSecuencia1.close();
                
                PreparedStatement RegistrarSecuencia2 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia2.setInt(1, idSecuencia + 2);
                RegistrarSecuencia2.setDate(2, sqlFechaInicial);
                RegistrarSecuencia2.setDate(3, sqlFechaFinal);
                RegistrarSecuencia2.setString(4, Secuencia2.getText());
                RegistrarSecuencia2.setString(5, (String) Rango2.getSelectedItem());
                RegistrarSecuencia2.setInt(6, Integer.parseInt(Horas2.getText()));
                int x2 = RegistrarSecuencia2.executeUpdate();
                RegistrarSecuencia2.close();
                
                PreparedStatement RegistrarSecuencia3 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia3.setInt(1, idSecuencia + 3);
                RegistrarSecuencia3.setDate(2, sqlFechaInicial);
                RegistrarSecuencia3.setDate(3, sqlFechaFinal);
                RegistrarSecuencia3.setString(4, Secuencia3.getText());
                RegistrarSecuencia3.setString(5, (String) Rango3.getSelectedItem());
                RegistrarSecuencia3.setInt(6, Integer.parseInt(Horas3.getText()));
                int x3 = RegistrarSecuencia3.executeUpdate();
                RegistrarSecuencia3.close();
               
                if(Horas4.getText().equals("")){ 
                }else{
                    PreparedStatement RegistrarSecuencia4 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                    RegistrarSecuencia4.setInt(1, idSecuencia + 4);
                    RegistrarSecuencia4.setDate(2, sqlFechaInicial);
                    RegistrarSecuencia4.setDate(3, sqlFechaFinal);
                    RegistrarSecuencia4.setString(4, Secuencia4.getText());
                    RegistrarSecuencia4.setString(5, (String) Rango4.getSelectedItem());
                    RegistrarSecuencia4.setInt(6, Integer.parseInt(Horas4.getText()));
                    int x4 = RegistrarSecuencia4.executeUpdate();
                    RegistrarSecuencia4.close();
                }
                
                if(Horas5.getText().equals("")){ 
                }else{    
                PreparedStatement RegistrarSecuencia5 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia5.setInt(1, idSecuencia + 5);
                RegistrarSecuencia5.setDate(2, sqlFechaInicial);
                RegistrarSecuencia5.setDate(3, sqlFechaFinal);
                RegistrarSecuencia5.setString(4, Secuencia5.getText());
                RegistrarSecuencia5.setString(5, (String) Rango5.getSelectedItem());
                RegistrarSecuencia5.setInt(6, Integer.parseInt(Horas5.getText()));
                int x5 = RegistrarSecuencia5.executeUpdate();
                RegistrarSecuencia5.close();
                }
                
                if(Horas6.getText().equals("")){ 
                }else{
                PreparedStatement RegistrarSecuencia6 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia6.setInt(1, idSecuencia + 6);
                RegistrarSecuencia6.setDate(2, sqlFechaInicial);
                RegistrarSecuencia6.setDate(3, sqlFechaFinal);
                RegistrarSecuencia6.setString(4, Secuencia6.getText());
                RegistrarSecuencia6.setString(5, (String) Rango6.getSelectedItem());
                RegistrarSecuencia6.setInt(6, Integer.parseInt(Horas6.getText()));
                int x6 = RegistrarSecuencia6.executeUpdate();
                RegistrarSecuencia6.close();
                }
                
                if(Horas7.getText().equals("")){ 
                }else{
                PreparedStatement RegistrarSecuencia7 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia7.setInt(1, idSecuencia + 7);
                RegistrarSecuencia7.setDate(2, sqlFechaInicial);
                RegistrarSecuencia7.setDate(3, sqlFechaFinal);
                RegistrarSecuencia7.setString(4, Secuencia7.getText());
                RegistrarSecuencia7.setString(5, (String) Rango7.getSelectedItem());
                RegistrarSecuencia7.setInt(6, Integer.parseInt(Horas7.getText()));
                int x7 = RegistrarSecuencia7.executeUpdate();
                RegistrarSecuencia7.close();
                }
                
                if(Horas8.getText().equals("")){ 
                }else{
                PreparedStatement RegistrarSecuencia8 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia8.setInt(1, idSecuencia + 8);
                RegistrarSecuencia8.setDate(2, sqlFechaInicial);
                RegistrarSecuencia8.setDate(3, sqlFechaFinal);
                RegistrarSecuencia8.setString(4, Secuencia8.getText());
                RegistrarSecuencia8.setString(5, (String) Rango8.getSelectedItem());
                RegistrarSecuencia8.setInt(6, Integer.parseInt(Horas8.getText()));
                int x8 = RegistrarSecuencia8.executeUpdate();
                RegistrarSecuencia8.close();
                }
                
                if(Horas9.getText().equals("")){ 
                }else{
                PreparedStatement RegistrarSecuencia9 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia9.setInt(1, idSecuencia + 9);
                RegistrarSecuencia9.setDate(2, sqlFechaInicial);
                RegistrarSecuencia9.setDate(3, sqlFechaFinal);
                RegistrarSecuencia9.setString(4, Secuencia9.getText());
                RegistrarSecuencia9.setString(5, (String) Rango9.getSelectedItem());
                RegistrarSecuencia9.setInt(6, Integer.parseInt(Horas9.getText()));
                int x9 = RegistrarSecuencia9.executeUpdate();
                RegistrarSecuencia9.close();
                }
                
                if(Horas10.getText().equals("")){ 
                }else{
                PreparedStatement RegistrarSecuencia10 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia10.setInt(1, idSecuencia + 10);
                RegistrarSecuencia10.setDate(2, sqlFechaInicial);
                RegistrarSecuencia10.setDate(3, sqlFechaFinal);
                RegistrarSecuencia10.setString(4, Secuencia10.getText());
                RegistrarSecuencia10.setString(5, (String) Rango10.getSelectedItem());
                RegistrarSecuencia10.setInt(6, Integer.parseInt(Horas10.getText()));
                int x10 = RegistrarSecuencia10.executeUpdate();
                RegistrarSecuencia10.close();
                }
                
                if(Horas11.getText().equals("")){ 
                }else{ 
                PreparedStatement RegistrarSecuencia11 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia11.setInt(1, idSecuencia + 11);
                RegistrarSecuencia11.setDate(2, sqlFechaInicial);
                RegistrarSecuencia11.setDate(3, sqlFechaFinal);
                RegistrarSecuencia11.setString(4, Secuencia11.getText());
                RegistrarSecuencia11.setString(5, (String) Rango11.getSelectedItem());
                RegistrarSecuencia11.setInt(6, Integer.parseInt(Horas11.getText()));
                int x11 = RegistrarSecuencia11.executeUpdate();
                RegistrarSecuencia11.close();
                }
                
                if(Horas12.getText().equals("")){ 
                }else{
                PreparedStatement RegistrarSecuencia12 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia12.setInt(1, idSecuencia + 12);
                RegistrarSecuencia12.setDate(2, sqlFechaInicial);
                RegistrarSecuencia12.setDate(3, sqlFechaFinal);
                RegistrarSecuencia12.setString(4, Secuencia12.getText());
                RegistrarSecuencia12.setString(5, (String) Rango12.getSelectedItem());
                RegistrarSecuencia12.setInt(6, Integer.parseInt(Horas12.getText()));
                int x12 = RegistrarSecuencia12.executeUpdate();
                RegistrarSecuencia12.close();
                }
                
                if(Horas13.getText().equals("")){ 
                }else{
                PreparedStatement RegistrarSecuencia13 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia13.setInt(1, idSecuencia + 13);
                RegistrarSecuencia13.setDate(2, sqlFechaInicial);
                RegistrarSecuencia13.setDate(3, sqlFechaFinal);
                RegistrarSecuencia13.setString(4, Secuencia13.getText());
                RegistrarSecuencia13.setString(5, (String) Rango13.getSelectedItem());
                RegistrarSecuencia13.setInt(6, Integer.parseInt(Horas13.getText()));
                int x13 = RegistrarSecuencia13.executeUpdate();
                RegistrarSecuencia13.close();
                }
                
                if(Horas14.getText().equals("")){ 
                }else{
                PreparedStatement RegistrarSecuencia14 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia14.setInt(1, idSecuencia + 14);
                RegistrarSecuencia14.setDate(2, sqlFechaInicial);
                RegistrarSecuencia14.setDate(3, sqlFechaFinal);
                RegistrarSecuencia14.setString(4, Secuencia14.getText());
                RegistrarSecuencia14.setString(5, (String) Rango14.getSelectedItem());
                RegistrarSecuencia14.setInt(6, Integer.parseInt(Horas14.getText()));
                int x14 = RegistrarSecuencia14.executeUpdate();
                RegistrarSecuencia14.close();
                }
                
                if(Horas15.getText().equals("")){ 
                }else{
                PreparedStatement RegistrarSecuencia15 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia15.setInt(1, idSecuencia + 15);
                RegistrarSecuencia15.setDate(2, sqlFechaInicial);
                RegistrarSecuencia15.setDate(3, sqlFechaFinal);
                RegistrarSecuencia15.setString(4, Secuencia15.getText());
                RegistrarSecuencia15.setString(5, (String) Rango15.getSelectedItem());
                RegistrarSecuencia15.setInt(6, Integer.parseInt(Horas15.getText()));
                int x15 = RegistrarSecuencia15.executeUpdate();
                RegistrarSecuencia15.close();
                }
                
                if(Horas16.getText().equals("")){ 
                }else{
                PreparedStatement RegistrarSecuencia16 = con.prepareStatement("INSERT INTO `secuencia de transporte real` (`idSecuencia`, `Fecha de inicio`, `Fecha de finalización`, `Secuencia`, `Rango de peso_Nombre`, `Horas de procesamiento` ) VALUES (?,?,?,?,?,?);");
                RegistrarSecuencia16.setInt(1, idSecuencia + 16);
                RegistrarSecuencia16.setDate(2, sqlFechaInicial);
                RegistrarSecuencia16.setDate(3, sqlFechaFinal);
                RegistrarSecuencia16.setString(4, Secuencia16.getText());
                RegistrarSecuencia16.setString(5, (String) Rango16.getSelectedItem());
                RegistrarSecuencia16.setInt(6, Integer.parseInt(Horas16.getText()));
                int x16 = RegistrarSecuencia16.executeUpdate();
                RegistrarSecuencia16.close();
                }
                
                con.close();
                
            }
            else {
                JOptionPane.showMessageDialog(null, "La fecha inicial, fecha final y los datos de las 3 primeras secuencias son obligatorios. Por favor ingrese para continuar","Campos obligatorios incompletos", JOptionPane.ERROR_MESSAGE);
                con.close();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Los datos ingresados no están en el formato aceptado "+e.getMessage(),"Error", JOptionPane.ERROR_MESSAGE);
        }

        this.dispose();

    }//GEN-LAST:event_GuardarActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_CancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarSecuencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarSecuencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarSecuencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarSecuencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarSecuencia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancelar;
    private com.toedter.calendar.JDateChooser FechaFinal;
    private com.toedter.calendar.JDateChooser FechaInicial;
    private javax.swing.JButton Guardar;
    private javax.swing.JTextField Horas1;
    private javax.swing.JTextField Horas10;
    private javax.swing.JTextField Horas11;
    private javax.swing.JTextField Horas12;
    private javax.swing.JTextField Horas13;
    private javax.swing.JTextField Horas14;
    private javax.swing.JTextField Horas15;
    private javax.swing.JTextField Horas16;
    private javax.swing.JTextField Horas2;
    private javax.swing.JTextField Horas3;
    private javax.swing.JTextField Horas4;
    private javax.swing.JTextField Horas5;
    private javax.swing.JTextField Horas6;
    private javax.swing.JTextField Horas7;
    private javax.swing.JTextField Horas8;
    private javax.swing.JTextField Horas9;
    private javax.swing.JComboBox<String> Rango1;
    private javax.swing.JComboBox<String> Rango10;
    private javax.swing.JComboBox<String> Rango11;
    private javax.swing.JComboBox<String> Rango12;
    private javax.swing.JComboBox<String> Rango13;
    private javax.swing.JComboBox<String> Rango14;
    private javax.swing.JComboBox<String> Rango15;
    private javax.swing.JComboBox<String> Rango16;
    private javax.swing.JComboBox<String> Rango2;
    private javax.swing.JComboBox<String> Rango3;
    private javax.swing.JComboBox<String> Rango4;
    private javax.swing.JComboBox<String> Rango5;
    private javax.swing.JComboBox<String> Rango6;
    private javax.swing.JComboBox<String> Rango7;
    private javax.swing.JComboBox<String> Rango8;
    private javax.swing.JComboBox<String> Rango9;
    private javax.swing.JLabel Secuencia1;
    private javax.swing.JLabel Secuencia10;
    private javax.swing.JLabel Secuencia11;
    private javax.swing.JLabel Secuencia12;
    private javax.swing.JLabel Secuencia13;
    private javax.swing.JLabel Secuencia14;
    private javax.swing.JLabel Secuencia15;
    private javax.swing.JLabel Secuencia16;
    private javax.swing.JLabel Secuencia2;
    private javax.swing.JLabel Secuencia3;
    private javax.swing.JLabel Secuencia4;
    private javax.swing.JLabel Secuencia5;
    private javax.swing.JLabel Secuencia6;
    private javax.swing.JLabel Secuencia7;
    private javax.swing.JLabel Secuencia8;
    private javax.swing.JLabel Secuencia9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
